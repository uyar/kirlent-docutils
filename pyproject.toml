[project]
name = "kirlent-docutils"
version = "0.4"
description = "Custom writers for docutils."
readme = "README.rst"

authors = [{name = "H. Turgut Uyar", email = "uyar@tekir.org"}]
license = {file = "LICENSE.txt"}

keywords = ["markup", "html", "rst", "restructuredtext", "docutils"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Text Processing :: Markup :: HTML"
]

requires-python = "~=3.8"
dependencies = ["docutils>=0.18", "pygments"]

[project.optional-dependencies]
tests = ["pytest", "pytest-cov"]
style = ["flake8", "flake8-isort", "flake8-pyproject"]
dev = [
    "kirlent-docutils[tests,style]",
    "build",
    "twine",
    "tox",
]

[project.scripts]
rst2kirlenthtml5 = "kirlent_docutils.cli:publish_cmdline_html5"
kirlent2slides = "kirlent_docutils.cli:publish_cmdline_slides"
kirlent2impressjs = "kirlent_docutils.cli:publish_cmdline_impressjs"
kirlent2revealjs = "kirlent_docutils.cli:publish_cmdline_revealjs"

[project.urls]
repository = "https://repo.tekir.org/kirlent/kirlent-docutils"

[tool.setuptools]
packages = ["kirlent_docutils"]
include-package-data = false

[tool.setuptools.package-data]
kirlent_docutils = ["css/*.*", "bundled/*.*"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["kirlent_docutils"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.flake8]
ignore = ["E731"]
per-file-ignores = [
    "tests/*: E501",
]
max-line-length = 79

[tool.isort]
lines_after_imports = 2
multi_line_output = 2
known_test = ["pytest", "unittest"]
sections = [
    "FUTURE",
    "TEST",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{8,9,10,11}, pypy3{8,9,10}, style
isolated_build = True

[testenv]
extras = tests
package = wheel
wheel_build_env = .pkg
commands =
    pytest

[testenv:coverage]
commands =
    pytest --cov

[testenv:style]
skip_install = true
deps =
    flake8
    flake8-isort
    flake8-pyproject
commands =
    flake8 kirlent_docutils tests

[testenv:package]
skip_install = true
deps =
    build
    twine
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -m build
    twine check dist/*
"""

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
